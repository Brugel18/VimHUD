:x	Exit(save changes and quit
:q!	quit without saving changes
:vi	Enter the vi editor
:noh	Suspend search highlighting until next search
:num	Move to line number 
:wq	Write file and quit
:w	Write file
:w file	Save copy to file
:n , m w file	Write lines n to m to new file
:n , m w >> file	Append lines n to m to existing file
:w!	Write file (overriding protection
:w! file Overwrite file with current text
:w %. new	Write current buffer named file as file.new
:q Quit 
:q!	Quit(disreguarding edits)
:e file	Edit another file; current file becomes alternate.
:e!	Return to version of current file at time of last write.
:e + file	Begin editing at end of file.
:e + num file	Open file at line num.
:e #	Open to previous position in alternate file.
:ta tag	Edit file at location tag.
:n	Edit next file in the list of files.
:n!	Force next file.
:n files	Specify new list of files.
:rewind	Edit first file in the list.
:args	Display list of files to be edited.
:prev	Edit previous file in the list of files.
:new	Open a new window.
:new file	Open file in a new window.
:sp [file]	Split the current window. With file, edit that file in the new window.
:sv [file]	Same as :sp, but make new window read-only.
:sn [file]	Edit next file in file list in new window.
:vsp [file]	Like :sp, but split vertically instead of horizontally.
:clo	Close current window.
:hid	Hide current window, unless it is the only visible window.
:on	Make current window the only visible one.
:res num	Resize window to num lines.
:wa	Write all changed buffers to their files.
:qa	Close all buffers and exit.
:r ! command	Read in output from command after current line.
: num r ! command	Like previous, but place after line num (0 for top of file).
:! command	Run command, then return.
: n , m ! command	Send lines n–m to command; replace with output.
:!!	Repeat last system command.
:sh	Create subshell; return to editor with EOF.
:so file	Read and execute ex commands from file
:ab in out	Use in as abbreviation for out in insert mode.
:unab in	Remove abbreviation for in.
:ab	List abbreviations.
:map string sequence	Map characters string as sequence of commands. Use #1, #2, etc., for the function keys.
:unmap string	Remove map for characters string.
:map	List character strings that are mapped.
:map! string sequence	Map characters string to input mode sequence.
:unmap! string	Remove input mode map (you may need to quote the characters with CTRL-V).
:map!	List character strings that are mapped for input mode.
:set x	Enable Boolean option x; show value of other options.
:set no x	Disable option x
:set x = value	Give value to option x.
:set	Show changed options.
:set all	Show all options.
:set x ?	Show value of option x.

